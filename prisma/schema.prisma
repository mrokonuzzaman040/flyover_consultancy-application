// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// Core content and lead models per SRS

model Lead {
  id               String   @id @default(cuid())
  name             String
  email            String
  phone            String?
  countryInterest  String[]
  serviceInterest  String[]
  message          String?
  utmSource        String?  @map("utm_source")
  utmMedium        String?  @map("utm_medium")
  utmCampaign      String?  @map("utm_campaign")
  source           String?  // website, whatsapp, event, etc.
  status           String   @default("new")
  createdAt        DateTime @default(now())
}

model Event {
  id             String    @id @default(cuid())
  title          String
  slug           String    @unique
  startAt        DateTime
  endAt          DateTime?
  venue          String?
  city           String?
  description    String
  bannerUrl      String?
  status         String    @default("draft")
  capacity       Int       @default(0)
  seatsRemaining Int       @default(0)
  registrations  EventRegistration[]
  createdAt      DateTime  @default(now())
}

model EventRegistration {
  id           String   @id @default(cuid())
  eventId      String
  event        Event    @relation(fields: [eventId], references: [id], onDelete: Cascade)
  attendeeName String
  email        String
  phone        String?
  createdAt    DateTime @default(now())
}

model Post {
  id          String   @id @default(cuid())
  title       String
  slug        String   @unique
  excerpt     String?
  contentMD   String
  tags        String[]
  country     String[]
  author      String
  coverUrl    String?
  publishedAt DateTime?
  status      String   @default("draft")
  createdAt   DateTime @default(now())
}

model Destination {
  id              String   @id @default(cuid())
  country         String
  slug            String   @unique
  hero            String?
  overviewMD      String?
  costsMD         String?
  intakesMD       String?
  visaMD          String?
  scholarshipsMD  String?
  popularCourses  String[]
  faqs            Json?
  createdAt       DateTime @default(now())
}

model Service {
  id         String   @id @default(cuid())
  name       String
  slug       String   @unique
  sectionsMD String[]
  ctaLabel   String?
  createdAt  DateTime @default(now())
}

model Testimonial {
  id          String   @id @default(cuid())
  author      String
  quote       String
  source      String?
  avatarUrl   String?
  publishedAt DateTime?
  createdAt   DateTime @default(now())
}

model Office {
  id          String   @id @default(cuid())
  city        String
  address     String
  phone       String
  email       String?
  mapEmbedUrl String?
  createdAt   DateTime @default(now())
}

// Basic user model for admin (RBAC-ready)
enum Role {
  ADMIN
  EDITOR
}

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  name         String?
  passwordHash String?
  role         Role     @default(EDITOR)
  createdAt    DateTime @default(now())
}
